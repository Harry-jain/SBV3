version: '3.8'

services:
  # --- Core Infrastructure ---
  postgres:
    image: postgres:15-alpine
    container_name: syncboard-postgres
    environment:
      POSTGRES_USER: syncboard_user
      POSTGRES_PASSWORD: syncboard_password
      POSTGRES_DB: syncboard_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U syncboard_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: syncboard-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Backend Microservices ---
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: syncboard-auth
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://syncboard_user:syncboard_password@postgres:5432/syncboard_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: syncboard-gateway
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      AUTH_SERVICE_URL: http://auth-service:3001
      COMMUNICATION_SERVICE_URL: http://communication-service:3002
      PORT: 3000
    depends_on:
      - auth-service
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules

  communication-service:
    build:
      context: ./services/communication-service
      dockerfile: Dockerfile
    container_name: syncboard-communication
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://syncboard_user:syncboard_password@postgres:5432/syncboard_db
      REDIS_URL: redis://redis:6379
      PORT: 3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/communication-service:/app
      - /app/node_modules

  # --- Frontend Client ---
  web-client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: syncboard-client
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3002
    depends_on:
      - api-gateway
    volumes:
      - ./client:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
